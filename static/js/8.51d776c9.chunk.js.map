{"version":3,"sources":["components/LevelVaccinated.js","../node_modules/fast-deep-equal/index.js"],"names":["LevelVaccinated","data","t","useTranslation","spring","useSpring","total","getStatistic","config","SPRING_CONFIG_NUMBERS","className","h4","interpolate","formatNumber","Math","floor","STATISTIC_CONFIGS","displayName","isEqual","prevProps","currProps","equal","memo","module","exports","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key"],"mappings":"iMASA,SAASA,EAAT,GAAkC,IAARC,EAAO,EAAPA,KACjBC,EAAKC,cAALD,EAEDE,EAASC,YAAU,CACvBC,MAAOC,YAAaN,EAAM,QAAS,cACnCO,OAAQC,MAGV,OACE,sBAAKC,UAAU,2BAAf,UACE,cAAC,IAAD,IACA,cAAC,IAASC,GAAV,UACGP,EAAOE,MAAMM,aACZ,SAACN,GAAD,gBACKO,YAAaC,KAAKC,MAAMT,IAD7B,YACwCJ,EACpCc,IAAiB,WAAeC,sBAQ9C,IAAMC,EAAU,SAACC,EAAWC,GAC1B,QAAKC,IAAMF,EAAUlB,KAAMmB,EAAUnB,OAMxBqB,yBAAKtB,EAAiBkB,I,gCCjCrCK,EAAOC,QAAU,SAASH,EAAMI,EAAGC,GACjC,GAAID,IAAMC,EAAG,OAAO,EAEpB,GAAID,GAAKC,GAAiB,iBAALD,GAA6B,iBAALC,EAAe,CAC1D,GAAID,EAAEE,cAAgBD,EAAEC,YAAa,OAAO,EAE5C,IAAIC,EAAQC,EAAGC,EACf,GAAIC,MAAMC,QAAQP,GAAI,CAEpB,IADAG,EAASH,EAAEG,SACGF,EAAEE,OAAQ,OAAO,EAC/B,IAAKC,EAAID,EAAgB,IAARC,KACf,IAAKR,EAAMI,EAAEI,GAAIH,EAAEG,IAAK,OAAO,EACjC,OAAO,EAKT,GAAIJ,EAAEE,cAAgBM,OAAQ,OAAOR,EAAES,SAAWR,EAAEQ,QAAUT,EAAEU,QAAUT,EAAES,MAC5E,GAAIV,EAAEW,UAAYC,OAAOC,UAAUF,QAAS,OAAOX,EAAEW,YAAcV,EAAEU,UACrE,GAAIX,EAAEc,WAAaF,OAAOC,UAAUC,SAAU,OAAOd,EAAEc,aAAeb,EAAEa,WAIxE,IADAX,GADAE,EAAOO,OAAOP,KAAKL,IACLG,UACCS,OAAOP,KAAKJ,GAAGE,OAAQ,OAAO,EAE7C,IAAKC,EAAID,EAAgB,IAARC,KACf,IAAKQ,OAAOC,UAAUE,eAAeC,KAAKf,EAAGI,EAAKD,IAAK,OAAO,EAEhE,IAAKA,EAAID,EAAgB,IAARC,KAAY,CAC3B,IAAIa,EAAMZ,EAAKD,GAEf,IAAKR,EAAMI,EAAEiB,GAAMhB,EAAEgB,IAAO,OAAO,EAGrC,OAAO,EAIT,OAAOjB,IAAIA,GAAKC,IAAIA","file":"static/js/8.51d776c9.chunk.js","sourcesContent":["import {SPRING_CONFIG_NUMBERS, STATISTIC_CONFIGS} from '../constants.js';\nimport {formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {ShieldCheckIcon} from '@primer/octicons-v2-react';\nimport equal from 'fast-deep-equal';\nimport {memo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction LevelVaccinated({data}) {\n  const {t} = useTranslation();\n\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'vaccinated'),\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  return (\n    <div className=\"LevelVaccinated fadeInUp\">\n      <ShieldCheckIcon />\n      <animated.h4>\n        {spring.total.interpolate(\n          (total) =>\n            `${formatNumber(Math.floor(total))} ${t(\n              STATISTIC_CONFIGS['vaccinated'].displayName\n            )}`\n        )}\n      </animated.h4>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data, currProps.data)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(LevelVaccinated, isEqual);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}