{"version":3,"sources":["../node_modules/d3-array/src/min.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../node_modules/fast-deep-equal/index.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx"],"names":["min","values","valueof","undefined","value","index","TimeseriesLoader","windowWidth","window","innerWidth","width","height","viewBox","speed","cx","cy","r","Timeseries","lazy","TimeseriesBrush","TimeseriesExplorer","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","t","useTranslation","useLocalStorage","lookback","setLookback","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","isMovingAverage","setIsMovingAverage","stateCodeDateRange","Object","keys","dates","beginningDate","getIndiaDateYesterdayISO","endDate","length","useState","brushEnd","setBrushEnd","useEffect","brushStart","formatISO","subDays","parseIndiaDate","representation","explorerElement","useRef","isVisible","useIsVisible","once","selectedRegion","useMemo","districts","districtName","selectedTimeseries","regions","states","filter","code","sort","code1","code2","STATE_NAMES","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","brushDates","handleChange","useCallback","target","JSON","parse","resetDropdown","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","entries","TIMESERIES_CHART_TYPES","ctype","htmlFor","id","type","checked","aria-label","onChange","disabled","stringify","fallback","brushDomain","TIMESERIES_LOOKBACK_DAYS","numDays","selected","isEqual","prevProps","currProps","forceRender","equal","memo","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","key","SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","title","fixedId","Math","random","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","rx"],"mappings":"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","file":"static/js/25.10a516df.chunk.js","sourcesContent":["export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ContentLoader from 'react-content-loader';\n\nconst TimeseriesLoader = () => {\n  const windowWidth = window.innerWidth;\n  const width = windowWidth > 769 ? 480 : windowWidth;\n  const height = 160 * 5;\n\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default TimeseriesLoader;\n","import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  STATE_NAMES,\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACK_DAYS,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  getIndiaDateYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport {PinIcon, ReplyIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {min} from 'd3-array';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  lazy,\n  Suspense,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage} from 'react-use';\n\nconst Timeseries = lazy(() => import('./Timeseries'));\nconst TimeseriesBrush = lazy(() => import('./TimeseriesBrush'));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useLocalStorage('timeseriesLookbackDays', 90);\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', false);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const [isMovingAverage, setIsMovingAverage] = useLocalStorage(\n    'isMovingAverage',\n    false\n  );\n\n  const stateCodeDateRange = Object.keys(timeseries?.[stateCode]?.dates || {});\n  const beginningDate =\n    stateCodeDateRange[0] || timelineDate || getIndiaDateYesterdayISO();\n  const endDate = min([\n    stateCodeDateRange[stateCodeDateRange.length - 1],\n    timelineDate || getIndiaDateYesterdayISO(),\n  ]);\n\n  const [brushEnd, setBrushEnd] = useState(endDate);\n  useEffect(() => {\n    setBrushEnd(endDate);\n  }, [endDate]);\n\n  const brushStart =\n    lookback !== null\n      ? formatISO(subDays(parseIndiaDate(brushEnd), lookback), {\n          representation: 'date',\n        })\n      : beginningDate;\n\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      .sort((code1, code2) =>\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(\n    () =>\n      Object.keys(selectedTimeseries || {}).filter((date) => date <= endDate),\n    [selectedTimeseries, endDate]\n  );\n\n  const brushDates = useMemo(\n    () => dates.filter((date) => brushStart <= date && date <= brushEnd),\n    [dates, brushStart, brushEnd]\n  );\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"timeseries-options\">\n          <div className=\"scale-modes\">\n            <label className=\"main\">{`${t('Scale Modes')}:`}</label>\n            <div className=\"timeseries-mode\">\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n              <input\n                id=\"timeseries-mode\"\n                type=\"checkbox\"\n                className=\"switch\"\n                checked={isUniform}\n                aria-label={t('Checked by default to scale uniformly.')}\n                onChange={setIsUniform.bind(this, !isUniform)}\n              />\n            </div>\n            <div\n              className={`timeseries-mode ${\n                chartType !== 'total' ? 'disabled' : ''\n              }`}\n            >\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n              <input\n                id=\"timeseries-logmode\"\n                type=\"checkbox\"\n                checked={chartType === 'total' && isLog}\n                className=\"switch\"\n                disabled={chartType !== 'total'}\n                onChange={setIsLog.bind(this, !isLog)}\n              />\n            </div>\n          </div>\n\n          <div\n            className={`timeseries-mode ${\n              chartType === 'total' ? 'disabled' : ''\n            } moving-average`}\n          >\n            <label htmlFor=\"timeseries-moving-average\">\n              {t('7 day Moving Average')}\n            </label>\n            <input\n              id=\"timeseries-moving-average\"\n              type=\"checkbox\"\n              checked={chartType === 'delta' && isMovingAverage}\n              className=\"switch\"\n              disabled={chartType !== 'delta'}\n              onChange={setIsMovingAverage.bind(this, !isMovingAverage)}\n            />\n          </div>\n        </div>\n      </div>\n      {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            dates={brushDates}\n            {...{endDate, chartType, isUniform, isLog, isMovingAverage}}\n          />\n          <TimeseriesBrush\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            brushDomain={[brushStart, brushEnd]}\n            {...{dates, endDate, setBrushEnd, setLookback}}\n          />\n        </Suspense>\n      )}\n      {!isVisible && <div style={{height: '50rem'}} />}\n      <div className=\"pills\">\n        {TIMESERIES_LOOKBACK_DAYS.map((numDays) => (\n          <button\n            key={numDays}\n            type=\"button\"\n            className={classnames({\n              selected: numDays === lookback,\n            })}\n            onClick={setLookback.bind(this, numDays)}\n          >\n            {t(numDays !== null ? `${numDays} days` : 'Beginning')}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(TimeseriesExplorer, isEqual);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"sourceRoot":""}