{"version":3,"sources":["hooks/useIsVisible.js","../node_modules/react-feather/dist/icons/smile.js","components/State.js"],"names":["OPTIONS","root","rootMargin","threshold","useIsVisible","elementRef","useState","isVisible","setIsVisible","useEffect","current","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","observe","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Smile","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","DeltaBarGraph","lazy","Footer","Level","LevelVaccinated","MapExplorer","MapSwitcher","Minigraphs","StateHeader","StateMeta","TimeseriesExplorer","State","t","useTranslation","stateCode","useParams","toUpperCase","useSessionStorage","mapStatistic","setMapStatistic","showAllDistricts","setShowAllDistricts","districtName","regionHighlighted","setRegionHighlighted","useSWR","API_ROOT_URL","fetcher","revalidateOnMount","refreshInterval","timeseries","data","timeseriesResponseError","error","gridRowCount","useMemo","gridColumnCount","window","innerWidth","districtCount","districts","filter","Math","ceil","stateMetaElement","useRef","isStateMetaVisible","once","trail","styles","map","element","index","push","animationDelay","lookback","Helmet","STATE_NAMES","name","content","className","style","position","dates","forceRender","total","vaccinated","fallback","minHeight","display","classnames","gridTemplateRows","sort","a","b","districtNameA","districtNameB","districtA","districtB","getStatistic","handleSort","slice","undefined","delta","formatNumber","every","date","statistic","onClick","flexBasis","memo"],"mappings":"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","file":"static/js/32.d130c084.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst OPTIONS = {\n  root: null,\n  rootMargin: '0px 0px 0px 0px',\n  threshold: 0,\n};\n\nconst useIsVisible = (elementRef) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    if (elementRef.current) {\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n            observer.unobserve(elementRef.current);\n          }\n        });\n      }, OPTIONS);\n      observer.observe(elementRef.current);\n    }\n  }, [elementRef]);\n\n  return isVisible;\n};\n\nexport default useIsVisible;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Smile = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 14s1.5 2 4 2 4-2 4-2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"9.01\",\n    y2: \"9\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"15.01\",\n    y2: \"9\"\n  }));\n});\nSmile.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSmile.displayName = 'Smile';\nexport default Smile;","import {API_ROOT_URL, STATE_NAMES} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {fetcher, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  lazy,\n  Suspense,\n  useRef,\n} from 'react';\nimport {Smile} from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst DeltaBarGraph = lazy(() => import('./DeltaBarGraph'));\nconst Footer = lazy(() => import('./Footer'));\nconst Level = lazy(() => import('./Level'));\nconst LevelVaccinated = lazy(() => import('./LevelVaccinated'));\nconst MapExplorer = lazy(() => import('./MapExplorer'));\nconst MapSwitcher = lazy(() => import('./MapSwitcher'));\nconst Minigraphs = lazy(() => import('./Minigraphs'));\nconst StateHeader = lazy(() => import('./StateHeader'));\nconst StateMeta = lazy(() => import('./StateMeta'));\nconst TimeseriesExplorer = lazy(() => import('./TimeseriesExplorer'));\n\nfunction State() {\n  const {t} = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null,\n      });\n      setShowAllDistricts(false);\n    }\n  }, [regionHighlighted.stateCode, stateCode]);\n\n  const {data: timeseries, error: timeseriesResponseError} = useSWR(\n    `${API_ROOT_URL}/timeseries-${stateCode}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n\n  const {data} = useSWR(`${API_ROOT_URL}/data.min.json`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000,\n  });\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = data[stateCode].districts[districtNameA];\n    const districtB = data[stateCode].districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!data) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = data[stateCode]?.districts\n      ? Object.keys(data[stateCode].districts).filter(\n          (districtName) => districtName !== 'Unknown'\n        ).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [data, stateCode]);\n\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement, {once: true});\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const lookback = showAllDistricts ? (window.innerWidth >= 540 ? 10 : 8) : 6;\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - covid19india.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <StateHeader data={data?.[stateCode]} stateCode={stateCode} />\n\n          <div style={{position: 'relative'}}>\n            <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n            <Level data={data?.[stateCode]} />\n            <Minigraphs\n              timeseries={timeseries?.[stateCode]?.dates}\n              {...{stateCode}}\n              forceRender={!!timeseriesResponseError}\n            />\n          </div>\n\n          {data?.[stateCode]?.total?.vaccinated && (\n            <LevelVaccinated data={data?.[stateCode]} />\n          )}\n\n          {data && (\n            <Suspense fallback={<div style={{minHeight: '50rem'}} />}>\n              <MapExplorer\n                {...{\n                  stateCode,\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  mapStatistic,\n                  setMapStatistic,\n                }}\n              ></MapExplorer>\n            </Suspense>\n          )}\n\n          <span ref={stateMetaElement} />\n\n          {data && isStateMetaVisible && (\n            <StateMeta\n              {...{\n                stateCode,\n                data,\n              }}\n              timeseries={timeseries?.[stateCode]?.dates}\n            />\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          <>\n            <div\n              className=\"district-bar\"\n              style={!showAllDistricts ? {display: 'flex'} : {}}\n            >\n              <div className=\"district-bar-top\">\n                <div className=\"district-bar-left\">\n                  <h2\n                    className={classnames(mapStatistic, 'fadeInUp')}\n                    style={trail[0]}\n                  >\n                    Top districts\n                  </h2>\n                  <div\n                    className={`districts fadeInUp ${\n                      showAllDistricts ? 'is-grid' : ''\n                    }`}\n                    style={\n                      showAllDistricts\n                        ? {\n                            gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                            ...trail[1],\n                          }\n                        : trail[1]\n                    }\n                  >\n                    {Object.keys(data?.[stateCode]?.districts || {})\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'total',\n                          mapStatistic\n                        );\n                        const delta = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'delta',\n                          mapStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {mapStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={mapStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n\n                <div className=\"district-bar-right fadeInUp\" style={trail[2]}>\n                  {timeseries &&\n                    (mapStatistic === 'confirmed' ||\n                      mapStatistic === 'deceased') && (\n                      <div className=\"happy-sign\">\n                        {Object.keys(timeseries[stateCode]?.dates || {})\n                          .slice(-lookback)\n                          .every(\n                            (date) =>\n                              getStatistic(\n                                timeseries[stateCode].dates[date],\n                                'delta',\n                                mapStatistic\n                              ) === 0\n                          ) && (\n                          <div\n                            className={`alert ${\n                              mapStatistic === 'confirmed' ? 'is-green' : ''\n                            }`}\n                          >\n                            <Smile />\n                            <div className=\"alert-right\">\n                              No new {mapStatistic} cases in the past five days\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  <DeltaBarGraph\n                    timeseries={timeseries?.[stateCode]?.dates}\n                    statistic={mapStatistic}\n                    {...{stateCode, lookback}}\n                    forceRender={!!timeseriesResponseError}\n                  />\n                </div>\n              </div>\n\n              <div className=\"district-bar-bottom\">\n                {Object.keys(data?.[stateCode]?.districts || {}).length > 5 ? (\n                  <button\n                    className=\"button fadeInUp\"\n                    onClick={toggleShowAllDistricts}\n                    style={trail[3]}\n                  >\n                    <span>{showAllDistricts ? `View less` : `View all`}</span>\n                  </button>\n                ) : (\n                  <div style={{height: '3.75rem', flexBasis: '15%'}} />\n                )}\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeseriesExplorer\n                {...{\n                  stateCode,\n                  timeseries,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                }}\n                forceRender={!!timeseriesResponseError}\n              />\n            </Suspense>\n          </>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default memo(State);\n"],"sourceRoot":""}